name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Clear npm cache (fix for Rollup native deps issue)
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Run linter
        run: npm run lint --if-present

      - name: Run type checking
        run: npm run typecheck --if-present

      - name: Build grammar
        run: npm run build:grammar

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Generate coverage report
        run: npm run test:coverage --if-present

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            src/generated/
          retention-days: 7

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Clear npm cache (fix for Rollup native deps issue)
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Check formatting
        run: npm run format:check --if-present

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check bundle size
        run: |
          npm run build
          echo "Browser bundle size:"
          ls -lh dist/browser/*.js | awk '{print $5, $9}'

  compatibility:
    name: Browser Compatibility Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Clear npm cache (fix for Rollup native deps issue)
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Build for browser
        run: npm run build:browser

      - name: Test CSP compliance
        run: |
          echo "Checking for eval/Function usage..."
          ! grep -r "eval(" dist/ --include="*.js"
          ! grep -r "new Function(" dist/ --include="*.js"
          echo "✅ CSP-safe: No eval or new Function found"

  # Documentation is now handled by the dedicated docs.yml workflow
  # to avoid conflicts between multiple deployments to GitHub Pages

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, code-quality, compatibility]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Clear npm cache (fix for Rollup native deps issue)
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Build project
        run: npm run build

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: version
        run: |
          # Check commit message for version bump type
          if [[ "${{ github.event.head_commit.message }}" == *"BREAKING CHANGE"* ]]; then
            npm version major --no-git-tag-version
          elif [[ "${{ github.event.head_commit.message }}" == *"feat:"* ]]; then
            npm version minor --no-git-tag-version
          else
            npm version patch --no-git-tag-version
          fi
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          echo "# Changelog" > CHANGELOG_TEMP.md
          echo "" >> CHANGELOG_TEMP.md
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> CHANGELOG_TEMP.md || echo "- Initial release" >> CHANGELOG_TEMP.md
          echo "" >> CHANGELOG_TEMP.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG_TEMP.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }} [skip ci]"
          git push origin main
        continue-on-error: true

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [test, code-quality, compatibility]
    if: always()

    steps:
      - name: Notify success
        if: ${{ success() }}
        run: echo "✅ All checks passed!"

      - name: Notify failure
        if: ${{ failure() }}
        run: echo "❌ Some checks failed. Please review the logs."
