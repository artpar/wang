name: Documentation

on:
  push:
    branches: [main]
    paths:
      - '**.md'
      - 'src/**'
      - 'docs/**'
      - 'playground.html'
      - 'dist/browser/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: write  # Need write permission to push to gh-pages branch
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Clear npm cache (fix for Rollup native deps issue)
        run: npm cache clean --force
      
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      
      - name: Build project
        run: npm run build
      
      - name: Install documentation tools
        run: npm install --save-dev typedoc typedoc-plugin-markdown @microsoft/api-extractor @microsoft/api-documenter
      
      - name: Generate API documentation
        run: |
          npx typedoc src/index.ts \
            --out docs/api \
            --readme README.md \
            --name "Wang Language" \
            --includeVersion \
            --excludePrivate \
            --excludeInternal \
            --plugin typedoc-plugin-markdown
      
      - name: Generate language reference
        run: |
          mkdir -p docs/reference
          node scripts/generate-docs.js || echo "No docs script found, skipping"
      
      - name: Copy additional documentation
        run: |
          cp README.md docs/index.md
          cp CLAUDE.md docs/development.md || echo "No CLAUDE.md found"
          
          # Copy playground and browser bundle
          cp playground.html docs/playground.html
          mkdir -p docs/dist/browser
          cp -r dist/browser/* docs/dist/browser/ || echo "Browser bundle not found"
          
          # Create main index with links to both playground and docs
          cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Wang Language</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
                margin: 0;
              }
              .container {
                text-align: center;
                color: white;
              }
              h1 {
                font-size: 4em;
                margin-bottom: 0.2em;
              }
              p {
                font-size: 1.5em;
                margin-bottom: 2em;
                opacity: 0.9;
              }
              .buttons {
                display: flex;
                gap: 20px;
                justify-content: center;
              }
              a {
                display: inline-block;
                padding: 15px 40px;
                background: white;
                color: #667eea;
                text-decoration: none;
                border-radius: 50px;
                font-size: 1.2em;
                font-weight: bold;
                transition: transform 0.3s, box-shadow 0.3s;
              }
              a:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 30px rgba(0,0,0,0.3);
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>ðŸš€ Wang Language</h1>
              <p>CSP-Safe Workflow Programming Language</p>
              <div class="buttons">
                <a href="playground.html">Try Playground</a>
                <a href="docs.html">Read Documentation</a>
              </div>
            </div>
          </body>
          </html>
          EOF
          
          # Create documentation site
          cat > docs/docs.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Wang Language Documentation</title>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/docsify/themes/vue.css">
          </head>
          <body>
            <div id="app"></div>
            <script>
              window.$docsify = {
                name: 'Wang Language',
                repo: 'artpar/wang',
                loadSidebar: true,
                loadNavbar: true,
                subMaxLevel: 3,
                auto2top: true,
                coverpage: true,
                executeScript: true,
                search: {
                  maxAge: 86400000,
                  paths: 'auto',
                  placeholder: 'Search',
                  noData: 'No Results',
                  depth: 3
                }
              }
            </script>
            <script src="https://cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/prismjs/components/prism-javascript.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/prismjs/components/prism-typescript.min.js"></script>
          </body>
          </html>
          EOF
      
      - name: Create sidebar
        run: |
          cat > docs/_sidebar.md << 'EOF'
          * [Home](/)
          * [Quick Start](/quickstart)
          * **Language Reference**
            * [Variables](/reference/variables)
            * [Functions](/reference/functions)
            * [Classes](/reference/classes)
            * [Modules](/reference/modules)
            * [Control Flow](/reference/control-flow)
            * [Pipeline Operators](/reference/pipelines)
          * **API Documentation**
            * [Interpreter](/api/interpreter)
            * [Module Resolvers](/api/resolvers)
            * [Errors](/api/errors)
          * **Development**
            * [Contributing](/development)
            * [Architecture](/architecture)
          EOF
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          enable_jekyll: false